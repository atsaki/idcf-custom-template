---

- hosts:
    - cloudstack_template
    - worker
  gather_facts: no
  pre_tasks:
    - include: tasks/set_ansible_ssh_host.yml
      vars:
        vm_name: "{{ inventory_hostname }}"
  tasks:
    - name: "ボリュームのIDを取得"
      shell: >
        cs listVolumes \
          type=DATA \
          name={{ inventory_hostname }} |
        jq -r ".volume[0]"
      connection: local
      changed_when: no
      register: volume
      when: '"cloudstack_template" in group_names'

    - name: "オリジナルのテンプレートの情報を取得"
      shell: >
        cs listTemplates \
          name="{{ template_name }}" \
          templatefilter=all |
        jq -r '.template | map(select(.zonename == "{{ zone_name }}")) | .[0]'
      connection: local
      changed_when: no
      register: original_template
      when: '"cloudstack_template" in group_names'

    - name: "ボリュームのスナップショットを作成"
      shell: >
        cs createSnapshot \
          name={{ inventory_hostname }} \
          volumeid="{{ (volume.stdout|from_json).id }}" |
        jq -r '.jobresult.snapshot'
      register: snapshot
      connection: local
      when: '"cloudstack_template" in group_names'

    - debug: var=snapshot
    - name: "スナップショットからテンプレート作成"
      shell: >
        cs createTemplate \
          name="{{ inventory_hostname }}" \
          displaytext="{{ inventory_hostname }}" \
          snapshotid="{{ (snapshot.stdout|from_json).id }}" \
          ostypeid="{{ (original_template.stdout|from_json).ostypeid }}" \
          isdynamicallyscalable="{{ cloudstack_template_is_dynamically_scalable }}" \
          passwordenabled="{{ cloudstack_template_password_enabled }}"
      connection: local
      when: '"cloudstack_template" in group_names'

    - name: "スナップショットを削除"
      shell: >
        cs deleteSnapshot id="{{ (snapshot.stdout|from_json).id }}"
      connection: local
      when: '"cloudstack_template" in group_names'
