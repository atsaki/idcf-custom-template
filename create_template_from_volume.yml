---

- hosts: cloudstack_template
  gather_facts: no
  connection: local
  tasks:
    - name: "ボリュームのIDを取得"
      shell: >
        cs listVolumes \
          type=DATA \
          name={{ inventory_hostname }} |
        jq -r ".volume[0]"
      changed_when: no
      register: volume
      when: '"cloudstack_template" in group_names'

    - name: "オリジナルのテンプレートの情報を取得"
      shell: >
        cs listTemplates \
          name="{{ template_name }}" \
          templatefilter=all |
        jq -r '.template | map(select(.zonename == "{{ zone_name }}")) | .[0]'
      changed_when: no
      register: original_template
      when: '"cloudstack_template" in group_names'

    - name: "ボリュームのスナップショットを作成"
      shell: >
        cs createSnapshot \
          name={{ inventory_hostname }} \
          volumeid="{{ (volume.stdout|from_json).id }}" |
        jq -r '.jobresult.snapshot'
      register: snapshot
      when: '"cloudstack_template" in group_names'

    - name: "スナップショットからテンプレート作成"
      shell: >
        cs createTemplate \
          name="{{ inventory_hostname }}" \
          displaytext="{{ inventory_hostname }}" \
          snapshotid="{{ (snapshot.stdout|from_json).id }}" \
          ostypeid="{{ (original_template.stdout|from_json).ostypeid }}" \
          isdynamicallyscalable="{{ cloudstack_template_is_dynamically_scalable|default(true) }}" \
          passwordenabled="{{ cloudstack_template_password_enabled|default(true) }}"
      when: '"cloudstack_template" in group_names'

    - name: "スナップショットを削除"
      shell: >
        cs deleteSnapshot id="{{ (snapshot.stdout|from_json).id }}"
      when: '"cloudstack_template" in group_names'
